name: Build & Push Docker Image to Docker Hub

on:
  push:
    tags:
      - "v*"

jobs:
  ci:
    name: Build & Push Docker Image to Docker Hub
    runs-on: ubuntu-latest

    env:
      DOCKER_IMAGE: helix-db
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      TAG: ${GITHUB_REF/refs\/tags\//}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get the version
        run: echo ${{ env.TAG }}

      # - name: Build the Docker image
      # run: docker build . --file Dockerfile --tag ${{ env.DOCKER_IMAGE }}:${{ env.TAG }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ env.TAG }}
      # - name: Docker metadata
      #   id: metadata
      #   uses: docker/metadata-action@v3
      #   with:
      #     images: ${{ env.IMG_NAME }}
      #     tags: |
      #       type=semver,pattern={{version}}
      #       type=semver,pattern={{major}}.{{minor}}
      #       type=raw,value={{sha}},enable=${{ github.ref_type != 'tag' }}

      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v1
      #   if: ${{ github.ref_type == 'tag' }}
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     push: ${{ github.event.base_ref =='refs/heads/main' && github.ref_type == 'tag' && !startsWith(github.ref, 'refs/tags/v0.')}}
      #     tags: ${{ steps.metadata.outputs.tags }}
      #     labels: ${{ steps.metadata.outputs.labels }}
